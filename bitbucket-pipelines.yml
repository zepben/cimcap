#####################################################################################################################
# Documentation: https://bitbucket.org/zepben/how-tos/src/master/bitbucket_pipelines/release-management.md
# Custom Images used: https://bitbucket.org/zepben/vm-container-images/
#####################################################################################################################
image: openjdk:14-slim

options:
  max-time: 30

definitions:
  caches:
    gradlewrapper: ~/.gradle/wrapper

  basic-image: &zep-basic-image
    image: zepben/pipeline-basic:2.0.0

  set-nexus-repo-properties: &set-nexus-repo-properties |-
    export properties="/root/.gradle/gradle.properties"
    mkdir -p "${properties%/*}"
    touch "$properties"
    echo "nexusUsername=$NEXUS_USERNAME" >> $properties
    echo "nexusPassword=$NEXUS_PASSWORD" >> $properties

  create-branch-update-version: &create-branch-update-version |-
    export BITBUCKET_BRANCH=$(git rev-parse --abbrev-ref HEAD)
    java-gradle-update-version build.gradle

  steps:
    - step: &build-test-step
        name: Build and Test
        caches:
          - gradle
          - gradlewrapper
        script:
          - *set-nexus-repo-properties
          - ./gradlew -i -b build.gradle build
    - step: &release-step
        name: Package and Upload artifact
        caches:
          - gradle
          - gradlewrapper
        script:
          - *set-nexus-repo-properties
          - ./gradlew -i -b build.gradle build jar
          - export artifact=$(ls build/libs | grep -o "^.*[0-9]\+\.[0-9]\+\.[0-9]\+\(\-SNAPSHOT\)\?\.jar")
          - curl -v -X POST --user "${BB_AUTH_STRING}" "https://api.bitbucket.org/2.0/repositories/${BITBUCKET_REPO_FULL_NAME}/downloads" --form files=@"build/libs/$artifact"
          - pipe: atlassian/slack-notify:0.3.6
            variables:
              WEBHOOK_URL: $SLACK_WEBHOOK
              MESSAGE: "$artifact is available."
pipelines:
  branches:
    master: 
      - step: *build-test-step
    LTS/*:
      - step: *build-test-step
    hotfix/*:
      - step: *build-test-step
  pull-requests:
    '**': 
      - step: *build-test-step

  tags:
    'v*.*.*':
      - step: *release-step
      - step: 
          image: hashicorp/packer
          name: Containerize app
          script:
            - apk add curl
            - curl -L -o cimcap.jar https://$BB_AUTH_STRING@api.bitbucket.org/2.0/repositories/zepben/cimcap/downloads/cimcap-${BITBUCKET_TAG}.jar
            - mkdir built-artifacts && mv cimcap.jar built-artifacts/cimcap.jar
            - apk add jq
            - jq --arg VERSION $BITBUCKET_TAG '."post-processors"[0][0].tag = $VERSION' container.json > container.json.tmp
            - mv container.json.tmp container.json
            - export PACKER_CONFIG_DIR="/opt/atlassian/bitbucketci/agent/build/"
            - docker login mavenrepo.zepben.com:8083 -u $NEXUS_USERNAME -p $NEXUS_PASSWORD
            - packer build container.json
          services:
            - docker
  custom:
    create-release:
      - step:
          name: Create release
          <<: *zep-basic-image
          script:
            - release-checks
            - java-gradle-finalize-version build.gradle
            - java-gradle-update-version build.gradle
            - rebase

    create-snapshot-release:
      - step: *release-step

    create-LTS-branch:
      - step:
          <<: *zep-basic-image
          name: Create LTS branch
          script:
            - create-branch --lts
            - *create-branch-update-version

    create-hotfix-branch:
      - step:
          <<: *zep-basic-image
          name: Create Hotfix branch
          script:
            - create-branch --hotfix
            - *create-branch-update-version