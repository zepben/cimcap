####################################################PIPELINE MENU####################################################
# branch - master & pull requests:
# * Runs build and tests.
# * Deploys SNAPSHOT version to Zepben Maven repo.
#
# Tags:
# * Builds source code and upload to Zepben Maven repo.
#
# release-then-incr-patch, release-then-incr-minor & release-then-incr-major:
# * Only works on master and LTS/* branches.
# * Remove SNAPSHOT from version and runs build and tests.
# * Date stamp release date in Changelog.
# * Tags the commit.
# * Updates the version and add entry into Changelog depending on the selected semantic version.
# * Tries to rebase master on top of the changes.
# * release-then-incr-minor & release-then-incr-major only works for master branch or commits under master branch.
# * Would not run pipeline when commit is part of the revisions in any tag.
#
# LTS:
# * Specify major or major.minor version.
# * Creates LTS/X.X.X branch, on the latest specified version.
#
# Images used: https://bitbucket.org/zepben/vm-container-images/
#####################################################################################################################
image: zepben/pipeline-java-openjdk:0.1.0-slim

options:
  max-time: 30

definitions:
  caches:
    gradlewrapper: ~/.gradle/wrapper

  basic-image: &basic-image
    image: zepben/pipeline-basic:1.3.0

  steps:
    - step: &run-tests-step
        name: Build and Test
        caches:
          - gradle
          - gradlewrapper
        script:
          - gradle-build build.gradle
    - step: &deploy
        name: Deploy SNAPSHOT to Maven repo
        caches:
          - gradle
          - gradlewrapper
        script:
          - gradle-release-app --snapshot build.gradle
    - step: &release-finalize-version
        <<: *basic-image
        name: Finalize release version
        script:
          - java-gradle-finalize-version build.gradle
    - step: &release-rebase-master
        <<: *basic-image
        name: Rebase master
        script:
          - rebase
    - step: &release-init
        <<: *basic-image
        name: Init
    - step: &release-update-next-version
        <<: *basic-image
        name: Update project version to next snapshot

  release-update-version-script: &release-update-version-script
                                  java-gradle-update-version build.gradle
pipelines:
  branches:
    master: 
      - step: *run-tests-step
      - step: *deploy
    LTS/*:
      - step: *run-tests-step
      - step: *deploy
  pull-requests:
    '**': 
      - step: *run-tests-step
  tags:
    '*.*.*':
      - step: 
          name: Build final release and Upload to Bitbucket
          caches:
            - gradle
            - gradlewrapper
          script:
            - gradle-release-app build.gradle
      - step: 
          image: hashicorp/packer
          name: Containerize app
          script:
            - apk add curl
            - curl -L -o file.zip https://$BB_AUTH_STRING@api.bitbucket.org/2.0/repositories/zepben/cimcap/downloads/cimcap-${BITBUCKET_TAG}.zip
            - mkdir tmp && unzip file.zip -d tmp
            - mkdir built-artifacts && mv tmp/cimcap*.jar built-artifacts/cimcap.jar
            - apk add jq
            - jq --arg VERSION $BITBUCKET_TAG '."post-processors"[0][0].tag = $VERSION' container.json > container.json.tmp
            - mv container.json.tmp container.json
            - export PACKER_CONFIG_DIR="/opt/atlassian/bitbucketci/agent/build/"
            - docker login mavenrepo.zepben.com:8083 -u $NEXUS_USERNAME -p $NEXUS_PASSWORD
            - packer build container.json
          services:
            - docker
  custom:
    release-then-incr-patch:
      - step:
          <<: *release-init
          script:
            - export VERSION_TYPE=patch
            - release-init
      - step: *release-finalize-version
      - step:
          <<: *release-update-next-version
          script:
            - export VERSION_TYPE=patch
            - *release-update-version-script
      - step: *release-rebase-master
    release-then-incr-minor:
      - step:
          <<: *release-init
          script:
            - export VERSION_TYPE=minor
            - release-init
      - step: *release-finalize-version
      - step:
          <<: *release-update-next-version
          script:
            - export VERSION_TYPE=minor
            - *release-update-version-script
      - step: *release-rebase-master
    release-then-incr-major:
      - step:
          <<: *release-init
          script:
            - export VERSION_TYPE=major
            - release-init
      - step: *release-finalize-version
      - step:
          <<: *release-update-next-version
          script:
            - export VERSION_TYPE=major
            - *release-update-version-script
      - step: *release-rebase-master
    LTS:
      - variables:
          - name: version
      - step:
          <<: *basic-image
          name: Create LTS support branch
          script:
            - create-lts $version